# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  imageRepository: 'site'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.SourceVersion)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Test
  displayName: Run tests
  jobs:
  - job: Tests
    displayName: Tests
    pool:
      vmImage: $(vmImageName)
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.x'
          addToPath: true
          architecture: 'x64'
      - bash: 'pip install -r ../requirements.txt'
        workingDirectory: src
        displayName: 'Install requirements'
      
      - bash: 'pytest --junitxml=$(Build.StagingDirectory)/results.xml'
        workingDirectory: src
        displayName: 'Run unit tests'

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '$(Build.StagingDirectory)/results.xml'
          failTaskOnFailedTests: true


- stage: Build
  displayName: Build and push image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: Deploy
  displayName: Deploy image to app service
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: AzureWebAppContainer@1
      inputs:
        azureSubscription: '$(azureSubscription)'
        appName: 'bymse-bys'
        containers: '$(containerRegistry)/$(imageRepository):$(tag)'
        appSettings: -BYS_BASE_URL "$(appBaseUrl)" -BYS_MONGO_URI "$(cosmosDbConnectionString)" -BYS_SECRET_KEY "$(flaskSecretKey)"
